FACTS: dryDetected; moist(INT)
VARSINT: moistureLevel; threshold
VARSREAL: temperature
INIT: moistureLevel := 0; threshold := 2
DISCRETE: notifyStart(); notifyStop(INT)
DURATIVE: waterValve(INT)
TIMERS: tCheck
PLACES: idle; checking; watering; moistDetected; alertSent
TRANSITIONS: tCheckDryness; tStartWatering; tStopByMoisture; tStopByManual; tSendAlert; tCheckEnd;

ARCS: tCheckEnd->idle ; idle->tCheckDryness; watering->tCheckEnd; tCheckDryness->checking; 
ARCS: checking->tStartWatering; tStartWatering->watering; watering->tStopByMoisture; watering->tStopByManual
ARCS: tStopByMoisture->moistDetected;  moistDetected->tSendAlert;  tSendAlert->idle; tSendAlert->alertSent; moistDetected -o> tStartWatering     

INITMARKING:(1,0,0,0,0)
EVENTS: dryDetected(0); stopButton(10)

<PN>
idle: [tCheck.start(10)]
tCheckEnd: [forget(tCheck.end)] if(tCheck.end) 
tCheckDryness: [remember(dryDetected); forget(moist(_))] when (dryDetected) 
checking: [notifyStart(); waterValve(1)]
tStartWatering: [] if (moistureLevel < threshold)
watering: [moistureLevel := moistureLevel + 1]
tStopByMoisture: [] if (moistureLevel >= threshold)
tStopByManual: [] when (stopButton)
moistDetected: [notifyStop(moistureLevel); forget(dryDetected); remember(moist(moistureLevel))]
